version: '3.8'

services:
  # PostgreSQL Database Service (Version 16)
  db:
    image: postgres:16-alpine  
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=blog_db
      - POSTGRES_USER=blog_user
      - POSTGRES_PASSWORD=blog_password
    ports:
      - "5432:5432"


  # Web Service (Django App)
  web:
    build: .
    command: >
      sh -c "python manage.py makemigrations &&
         python manage.py migrate &&
         python manage.py runserver 0.0.0.0:8000"
  
    volumes:
      - ./core:/app
      - media_volume:/app/media
    ports:
      - "8000:8000"
    environment:
      - DEBUG=1
      - SECRET_KEY=django-insecure-your-secret-key-here
      - DB_NAME=blog_db
      - DB_USER=blog_user
      - DB_PASSWORD=blog_password
      - DB_HOST=db
      - DB_PORT=5432
    depends_on:
      - db
      - redis


  # Redis Service
  redis:
    image: "redis:7-alpine"
    ports:
      - "6379:6379"
    restart: unless-stopped

  # Celery Worker Service
  celery:
    build: .
    command: celery -A core worker -l info # <-- Assuming your project is named 'core'
    volumes:
      - ./core:/app
    depends_on:
      - redis
      - db
    restart: unless-stopped

  # Smtp4dev Service (for local email testing)
  smtp4dev:
    image: rnwood/smtp4dev
    ports:
      - "8080:80"    # Web UI
      - "2525:25"    # SMTP Port
    restart: unless-stopped

# Volumes to persist data
volumes:
  postgres_data:
  media_volume:
